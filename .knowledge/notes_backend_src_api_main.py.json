{"is_source_file": true, "format": "Python", "description": "Main source file for a FastAPI backend API managing user authentication and note CRUD operations with search capabilities. Defines data models, schema, route handlers, and configuration.", "external_files": ["fastapi", "fastapi.middleware.cors", "fastapi.security", "typing", "datetime", "pydantic", "jose", "passlib", "sqlmodel", "os"], "external_methods": ["FastAPI", "Depends", "HTTPException", "status.HTTP_401_UNAUTHORIZED", "status.HTTP_404_NOT_FOUND", "status.HTTP_201_CREATED", "select", "create_engine"], "published": ["app", "Note", "User", "UserCreate", "UserLogin", "UserOut", "Token", "NoteBase", "NoteCreate", "NoteUpdate", "NoteOut", "health_check", "signup", "login", "list_notes", "create_note", "get_note", "update_note", "delete_note"], "classes": [{"name": "Note", "description": "SQLModel ORM model representing a Note entity, including fields for id, title, content, owner_id, created_at, and updated_at."}, {"name": "User", "description": "SQLModel ORM model representing a User entity, including fields for id, email, hashed_password, and created_at."}, {"name": "UserCreate", "description": "Pydantic model for user sign-up input, requiring email and password."}, {"name": "UserLogin", "description": "Pydantic model for user login input, requiring email and password."}, {"name": "UserOut", "description": "Pydantic model for representing user information exported out of API responses."}, {"name": "Token", "description": "Pydantic model for JWT token response, containing access_token and token_type."}, {"name": "NoteBase", "description": "Base Pydantic model for note creation/update, including title and content."}, {"name": "NoteCreate", "description": "Pydantic model inheriting from NoteBase, used for creating new notes."}, {"name": "NoteUpdate", "description": "Pydantic model for updating notes, with optional title and content."}, {"name": "NoteOut", "description": "Full note representation including id, owner_id, timestamps, in API responses."}], "methods": [{"name": "str get_password_hash(password: str)", "description": "Hashes a password string using bcrypt.", "scope": "", "scopeKind": ""}, {"name": "bool verify_password(plain: str, hashed: str)", "description": "Verifies a password against its hashed version.", "scope": "", "scopeKind": ""}, {"name": "create_access_token(data: dict, expires_delta: timedelta = None)", "description": "Generates a JWT token with optional expiration.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_email(db: Session, email: str)", "description": "Retrieves a User from the database by email address.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_id(db: Session, user_id: int)", "description": "Retrieves a User from the database by user ID.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] authenticate_user(db: Session, email: str, password: str)", "description": "Validates user credentials and returns User object if valid.", "scope": "", "scopeKind": ""}, {"name": "get_db()", "description": "Provides a database session for dependency injection.", "scope": "", "scopeKind": ""}, {"name": "UserOut get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Decodes JWT token to retrieve current authenticated user.", "scope": "", "scopeKind": ""}, {"name": "health_check()", "description": "Health check endpoint returning a simple message.", "scope": "", "scopeKind": ""}, {"name": "signup(user: UserCreate, db: Session = Depends(get_db))", "description": "Registers a new user and saves to database.", "scope": "", "scopeKind": ""}, {"name": "login(user: UserLogin, db: Session = Depends(get_db))", "description": "Authenticates user and returns JWT token.", "scope": "", "scopeKind": ""}, {"name": "list_notes( q: Optional[str] = Query(None, description=\"Search string for filtering notes by title/content.\"), skip: int = Query(0, ge=0), limit: int = Query(20, ge=1, le=100), current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Lists user's notes with optional search query.", "scope": "", "scopeKind": ""}, {"name": "create_note( note: NoteCreate, current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Creates a new note for the current user.", "scope": "", "scopeKind": ""}, {"name": "get_note( note_id: int = Path(..., ge=1, description=\"Note ID\"), current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Retrieves a specific note by ID for the current user.", "scope": "", "scopeKind": ""}, {"name": "update_note( note_id: int, note: NoteUpdate, current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Partially updates a note by ID.", "scope": "", "scopeKind": ""}, {"name": "delete_note( note_id: int, current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )", "description": "Deletes a note by ID.", "scope": "", "scopeKind": ""}], "calls": ["select", "jwt.decode", "db.exec", "db.get", "db.add", "db.commit", "db.refresh", "db.delete"], "search-terms": ["FastAPI", "JWT", "notes", "OAuth2", "CRUD", "search", "authorization"], "state": 2, "file_id": 2, "knowledge_revision": 12, "git_revision": "68e1f1f43249256f507338ef81fc70cf7e242d70", "revision_history": [{"8": "9354a607b334e09cf26abf96f1982a9a5479ef19"}, {"10": "5593b9375150a1ef93fc8b507cfe5bc47ef1bf83"}, {"11": "5593b9375150a1ef93fc8b507cfe5bc47ef1bf83"}, {"12": "68e1f1f43249256f507338ef81fc70cf7e242d70"}], "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 24  # 1 day$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^ALGORITHM = \"HS256\"$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DB_PATH", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^DB_PATH = os.environ.get(\"DB_PATH\", \"sqlite:\\/\\/\\/notes.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class Note(SQLModel, table=True):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteBase", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class NoteBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class NoteCreate(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteOut", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class NoteOut(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class NoteUpdate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ORMField", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^from sqlmodel import Field as ORMField, SQLModel, create_engine, Session, select$/", "language": "Python", "kind": "unknown", "nameref": "unknown:Field"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^SECRET_KEY = os.environ.get('SECRET_KEY', 'notsosecret')$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class User(SQLModel, table=True):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserCreate", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class UserCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserLogin", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class UserLogin(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserOut", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^class UserOut(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    access_token: str = Field(..., description=\"JWT access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "app", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^app = FastAPI($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def authenticate_user(db: Session, email: str, password: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, email: str, password: str)"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    content: Optional[str] = Field(None, description=\"Body\\/content of the note\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    content: str = Field(..., description=\"Body\\/content of the note\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def create_access_token(data: dict, expires_delta: timedelta = None):$/", "language": "Python", "kind": "function", "signature": "(data: dict, expires_delta: timedelta = None)"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def create_note($/", "language": "Python", "kind": "function", "signature": "( note: NoteCreate, current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    created_at: Optional[datetime] = Field(None, description=\"Account creation timestamp\")$/", "language": "Python", "typeref": "typename:Optional[datetime]", "kind": "variable", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    created_at: datetime = Field(..., description=\"Creation timestamp\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    created_at: datetime = ORMField(default_factory=datetime.utcnow)$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    created_at: datetime = ORMField(default_factory=datetime.utcnow)$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def delete_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    email: EmailStr = Field(..., description=\"User's email\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserLogin", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    email: EmailStr = Field(..., description=\"User's unique email address\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    email: EmailStr = Field(..., description=\"User's unique email address\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    email: str = ORMField(index=True, unique=True, nullable=False)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^engine = create_engine(DB_PATH, echo=False)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)) -> User/", "language": "Python", "typeref": "typename:UserOut", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def get_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int = Path(..., ge=1, description=\"Note ID\"), current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def get_user_by_email(db: Session, email: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, email: str)"}, {"_type": "tag", "name": "get_user_by_id", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def get_user_by_id(db: Session, user_id: int) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, user_id: int)"}, {"_type": "tag", "name": "health_check", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def health_check():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    id: Optional[int] = ORMField(default=None, primary_key=True)$/", "language": "Python", "typeref": "typename:Optional[int]", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    id: Optional[int] = ORMField(default=None, primary_key=True)$/", "language": "Python", "typeref": "typename:Optional[int]", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    id: int = Field(..., description=\"Note ID\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    id: int = Field(..., description=\"Unique identifier of the user\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "UserOut", "scopeKind": "class"}, {"_type": "tag", "name": "list_notes", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def list_notes($/", "language": "Python", "kind": "function", "signature": "( q: Optional[str] = Query(None, description=\"Search string for filtering notes by title/content.\"), skip: int = Query(0, ge=0), limit: int = Query(20, ge=1, le=100), current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def login(user: UserLogin, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user: UserLogin, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "owner_id", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    owner_id: int = Field(..., description=\"ID of the user who owns this note\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "owner_id", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    owner_id: int = ORMField(foreign_key=\"user.id\", index=True)$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., description=\"User's password\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserLogin", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    password: str = Field(..., min_length=6, description=\"User's password (min 6 characters)\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "signup", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def signup(user: UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user: UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    title: Optional[str] = Field(None, max_length=256, description=\"Title of the note\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteUpdate", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    title: str = Field(..., max_length=256, description=\"Title of the note\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    title: str = ORMField(max_length=256, index=True)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    token_type: str = Field(..., description=\"Type of token, typically 'bearer'\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "Token", "scopeKind": "class"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def update_note($/", "language": "Python", "kind": "function", "signature": "( note_id: int, note: NoteUpdate, current_user: UserOut = Depends(get_current_user), db: Session = Depends(get_db) )"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    updated_at: datetime = Field(..., description=\"Last update timestamp\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "NoteOut", "scopeKind": "class"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^    updated_at: datetime = ORMField(default_factory=datetime.utcnow)$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/note-keeper-49139-49158/notes_backend/src/api/main.py", "pattern": "/^def verify_password(plain: str, hashed: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain: str, hashed: str)"}], "hash": "1e96b12c4389936aed71ecf27369e0de", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/main.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = 60 * 24  # 1 day", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = \"HS256\"", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DB_PATH = os.environ.get(\"DB_PATH\", \"sqlite:\\/\\/\\/notes.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.environ.get('SECRET_KEY', 'notsosecret')", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str access_token", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "app = FastAPI(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] content", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str content", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[datetime] created_at", "scope": "UserOut", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime created_at", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}, {"name": "EmailStr email", "scope": "UserLogin", "scopeKind": "class", "description": "unavailable"}, {"name": "str email", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "engine = create_engine(DB_PATH, echo=False)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[int] id", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "int id", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int owner_id", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}, {"name": "str password", "scope": "UserLogin", "scopeKind": "class", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] title", "scope": "NoteUpdate", "scopeKind": "class", "description": "unavailable"}, {"name": "str title", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str token_type", "scope": "Token", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime updated_at", "scope": "NoteOut", "scopeKind": "class", "description": "unavailable"}]}